version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://ufo_user:${POSTGRES_PASSWORD:-ufo_password}@database:5432/ufo_timeline
      - JWT_SECRET=${JWT_SECRET:-dev_jwt_secret_key}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-dev_nextauth_secret}
      - NEXTAUTH_URL=http://localhost:3000
    volumes:
      # Enable hot reload for development
      - .:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ufo-network

  database:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=ufo_timeline
      - POSTGRES_USER=ufo_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-ufo_password}
    ports:
      - "5433:5432"  # Use 5433 for development to avoid conflicts
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ufo_user -d ufo_timeline"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ufo-network

  # pgAdmin for development database management
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@ufo.local
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - database
    networks:
      - ufo-network

volumes:
  postgres_dev_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  ufo-network:
    driver: bridge